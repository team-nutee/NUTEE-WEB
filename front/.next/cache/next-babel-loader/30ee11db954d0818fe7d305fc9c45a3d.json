{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useInput } from '../containers/Signup'; // TODO: util 폴더로 옮기기\n\nimport { LOG_IN_REQUEST } from '../reducers/user';\n\nvar LoginForm = function LoginForm() {\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      id = _useInput2[0],\n      onChangeId = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      password = _useInput4[0],\n      onChangePassword = _useInput4[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      isLoggingIn = _useSelector.isLoggingIn;\n\n  var dispatch = useDispatch();\n  var onSubmitForm = useCallback(function (e) {\n    e.preventDefault();\n    dispatch({\n      type: LOG_IN_REQUEST,\n      data: {\n        userId: id,\n        password: password\n      }\n    });\n  }, [id, password]);\n  return __jsx(Form, {\n    style: {\n      marginTop: '4px',\n      minWidth: '450px'\n    },\n    onSubmit: onSubmitForm\n  }, __jsx(\"div\", {\n    style: {\n      \"float\": \"left\",\n      marginRight: '5px',\n      marginLeft: '0px'\n    }\n  }, __jsx(Input, {\n    placeholder: 'Id',\n    size: \"small\",\n    name: \"user-id\",\n    value: id,\n    onChange: onChangeId,\n    required: true\n  })), __jsx(\"div\", {\n    style: {\n      \"float\": \"left\",\n      marginRight: '5px'\n    }\n  }, __jsx(Input, {\n    placeholder: 'Password',\n    size: \"small\",\n    name: \"user-password\",\n    value: password,\n    onChange: onChangePassword,\n    type: \"password\",\n    required: true\n  })), __jsx(\"div\", {\n    style: {\n      \"float\": \"left\"\n    }\n  }, __jsx(Button, {\n    size: \"small\",\n    style: {\n      marginRight: '5px'\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    shape: \"round\",\n    loading: isLoggingIn\n  }, \"\\uB85C\\uADF8\\uC778\")));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["C:/Users/mf311/IdeaProjects/NUTEE-WEB/front/containers/LoginForm.js"],"names":["React","useCallback","Button","Form","Input","useDispatch","useSelector","useInput","LOG_IN_REQUEST","LoginForm","id","onChangeId","password","onChangePassword","state","user","isLoggingIn","dispatch","onSubmitForm","e","preventDefault","type","data","userId","marginTop","minWidth","marginRight","marginLeft"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,sBAAzB,C,CAAiD;;AACjD,SAASC,cAAT,QAA+B,kBAA/B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA,kBACKF,QAAQ,CAAC,EAAD,CADb;AAAA;AAAA,MACbG,EADa;AAAA,MACTC,UADS;;AAAA,mBAEiBJ,QAAQ,CAAC,EAAD,CAFzB;AAAA;AAAA,MAEbK,QAFa;AAAA,MAEHC,gBAFG;;AAAA,qBAGIP,WAAW,CAAC,UAAAQ,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAHf;AAAA,MAGZC,WAHY,gBAGZA,WAHY;;AAIpB,MAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AAEA,MAAMa,YAAY,GAAGjB,WAAW,CAAC,UAACkB,CAAD,EAAO;AACpCA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEb,cADD;AAELc,MAAAA,IAAI,EAAE;AACFC,QAAAA,MAAM,EAAEb,EADN;AAEFE,QAAAA,QAAQ,EAARA;AAFE;AAFD,KAAD,CAAR;AAOH,GAT+B,EAS7B,CAACF,EAAD,EAAKE,QAAL,CAT6B,CAAhC;AAWA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACY,MAAAA,SAAS,EAAC,KAAX;AAAkBC,MAAAA,QAAQ,EAAC;AAA3B,KAAb;AAAkD,IAAA,QAAQ,EAAEP;AAA5D,KACI;AAAK,IAAA,KAAK,EAAE;AAAC,eAAM,MAAP;AAAeQ,MAAAA,WAAW,EAAE,KAA5B;AAAmCC,MAAAA,UAAU,EAAE;AAA/C;AAAZ,KACI,MAAC,KAAD;AAAO,IAAA,WAAW,EAAE,IAApB;AAA0B,IAAA,IAAI,EAAE,OAAhC;AAAyC,IAAA,IAAI,EAAC,SAA9C;AAAwD,IAAA,KAAK,EAAEjB,EAA/D;AAAmE,IAAA,QAAQ,EAAEC,UAA7E;AAAyF,IAAA,QAAQ;AAAjG,IADJ,CADJ,EAII;AAAK,IAAA,KAAK,EAAE;AAAC,eAAM,MAAP;AAAee,MAAAA,WAAW,EAAE;AAA5B;AAAZ,KACI,MAAC,KAAD;AAAO,IAAA,WAAW,EAAE,UAApB;AAAgC,IAAA,IAAI,EAAE,OAAtC;AAA+C,IAAA,IAAI,EAAC,eAApD;AAAoE,IAAA,KAAK,EAAEd,QAA3E;AAAqF,IAAA,QAAQ,EAAEC,gBAA/F;AAAiH,IAAA,IAAI,EAAC,UAAtH;AAAiI,IAAA,QAAQ;AAAzI,IADJ,CAJJ,EAOI;AAAK,IAAA,KAAK,EAAE;AAAC,eAAM;AAAP;AAAZ,KACI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,OAAd;AAAuB,IAAA,KAAK,EAAE;AAACa,MAAAA,WAAW,EAAE;AAAd,KAA9B;AAAoD,IAAA,IAAI,EAAC,SAAzD;AAAmE,IAAA,QAAQ,EAAC,QAA5E;AAAqF,IAAA,KAAK,EAAE,OAA5F;AAAqG,IAAA,OAAO,EAAEV;AAA9G,0BADJ,CAPJ,CADJ;AAaH,CA9BD;;AAgCA,eAAeP,SAAf","sourcesContent":["import React, { useCallback } from 'react';\r\nimport { Button, Form, Input } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useInput } from '../containers/Signup'; // TODO: util 폴더로 옮기기\r\nimport { LOG_IN_REQUEST } from '../reducers/user';\r\n\r\nconst LoginForm = () => {\r\n    const [id, onChangeId] = useInput('');\r\n    const [password, onChangePassword] = useInput('');\r\n    const { isLoggingIn } = useSelector(state => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmitForm = useCallback((e) => {\r\n        e.preventDefault();\r\n        dispatch({\r\n            type: LOG_IN_REQUEST,\r\n            data: {\r\n                userId: id,\r\n                password,\r\n            },\r\n        });\r\n    }, [id, password]);\r\n\r\n    return (\r\n        <Form style={{marginTop:'4px', minWidth:'450px'}} onSubmit={onSubmitForm} >\r\n            <div style={{float:\"left\", marginRight: '5px', marginLeft: '0px'}}>\r\n                <Input placeholder={'Id'} size={\"small\"} name=\"user-id\" value={id} onChange={onChangeId} required />\r\n            </div>\r\n            <div style={{float:\"left\", marginRight: '5px'}}>\r\n                <Input placeholder={'Password'} size={\"small\"} name=\"user-password\" value={password} onChange={onChangePassword} type=\"password\" required />\r\n            </div>\r\n            <div style={{float:\"left\"}}>\r\n                <Button size={\"small\"} style={{marginRight: '5px'}} type=\"primary\" htmlType=\"submit\" shape={\"round\"} loading={isLoggingIn}>로그인</Button>\r\n            </div>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}