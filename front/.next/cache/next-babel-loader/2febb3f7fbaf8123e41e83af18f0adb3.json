{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withRedux from 'next-redux-wrapper';\nimport withReduxSaga from 'next-redux-saga';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport axios from 'axios';\nimport Helmet from 'react-helmet';\nimport App, { Container } from 'next/app';\nimport AppLayout from '../components/AppLayout';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\nimport { LOAD_USER_REQUEST } from \"../reducers/user\";\n\nconst NodeBird = ({\n  Component,\n  store,\n  pageProps\n}) => {\n  return __jsx(Container, null, __jsx(Provider, {\n    store: store\n  }, __jsx(Helmet, {\n    title: \"NUTEE\",\n    htmlAttributes: {\n      lang: 'ko'\n    },\n    meta: [{\n      charset: 'UTF-8'\n    }, {\n      name: 'viewport',\n      content: 'width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=yes,viewport-fit=cover'\n    }, {\n      'http-equiv': 'X-UA-Compatible',\n      content: 'IE=edge'\n    }, {\n      name: 'description',\n      content: '성공회대 통합 커뮤니티 서비스'\n    }, {\n      name: 'og:title',\n      content: 'NUTEE'\n    }, {\n      name: 'og:description',\n      content: '성공회대 통합 커뮤니티 서비스'\n    }, {\n      property: 'og:type',\n      content: 'website'\n    }],\n    link: [{\n      rel: 'shortcut icon',\n      href: '/favicon.ico'\n    }, {\n      rel: 'stylesheet',\n      href: 'https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.css'\n    }, {\n      rel: 'stylesheet',\n      href: 'https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.9.0/slick.css'\n    }, {\n      rel: 'stylesheet',\n      href: 'https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.9.0/slick-theme.css'\n    }]\n  }), __jsx(AppLayout, null, __jsx(Component, pageProps))));\n};\n\nNodeBird.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  store: PropTypes.object.isRequired,\n  pageProps: PropTypes.object.isRequired\n}; //SSR 을 진행할 때 서버인 경우와 클라이언티인 경우를 두 가지 경우를 생각해야 하기 때문에 3항 연산자를 이용하여 구분을 해주어야한다.\n\nNodeBird.getInitialProps = async context => {\n  console.log(context);\n  const {\n    ctx,\n    Component\n  } = context;\n  let pageProps = {};\n  const state = ctx.store.getState();\n  const cookie = ctx.isServer ? ctx.req.headers.cookie : '';\n  console.log('cookie', cookie);\n\n  if (ctx.isServer && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  if (!state.user.me) {\n    ctx.store.dispatch({\n      type: LOAD_USER_REQUEST\n    });\n  }\n\n  if (Component.getInitialProps) {\n    pageProps = await Component.getInitialProps(ctx);\n  }\n\n  return {\n    pageProps\n  };\n};\n\nconst configureStore = (initialState, options) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : compose(applyMiddleware(...middlewares), !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f);\n  const store = createStore(reducer, initialState, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default withRedux(configureStore)(withReduxSaga(NodeBird));","map":{"version":3,"sources":["C:/Users/mf311/IdeaProjects/NUTEE-WEB/front/pages/_app.js"],"names":["React","PropTypes","withRedux","withReduxSaga","applyMiddleware","compose","createStore","Provider","createSagaMiddleware","axios","Helmet","App","Container","AppLayout","reducer","rootSaga","LOAD_USER_REQUEST","NodeBird","Component","store","pageProps","lang","charset","name","content","property","rel","href","propTypes","elementType","isRequired","object","getInitialProps","context","console","log","ctx","state","getState","cookie","isServer","req","headers","defaults","Cookie","user","me","dispatch","type","configureStore","initialState","options","sagaMiddleware","middlewares","enhancer","window","__REDUX_DEVTOOLS_EXTENSION__","f","sagaTask","run"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withRedux from 'next-redux-wrapper';\r\nimport withReduxSaga from 'next-redux-saga';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport axios from 'axios';\r\nimport Helmet from 'react-helmet';\r\nimport App, { Container } from 'next/app';\r\n\r\nimport AppLayout from '../components/AppLayout';\r\nimport reducer from '../reducers';\r\nimport rootSaga from '../sagas';\r\nimport {LOAD_USER_REQUEST} from \"../reducers/user\";\r\n\r\nconst NodeBird = ({ Component, store, pageProps }) => {\r\n    return (\r\n        <Container>\r\n        <Provider store={store}>\r\n            <Helmet\r\n                title=\"NUTEE\"\r\n                htmlAttributes={{ lang: 'ko' }}\r\n                meta={[{\r\n                    charset: 'UTF-8',\r\n                }, {\r\n                    name: 'viewport',\r\n                    content: 'width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=yes,viewport-fit=cover',\r\n                }, {\r\n                    'http-equiv': 'X-UA-Compatible', content: 'IE=edge',\r\n                }, {\r\n                    name: 'description', content: '성공회대 통합 커뮤니티 서비스',\r\n                }, {\r\n                    name: 'og:title', content: 'NUTEE',\r\n                }, {\r\n                    name: 'og:description', content: '성공회대 통합 커뮤니티 서비스',\r\n                }, {\r\n                    property: 'og:type', content: 'website',\r\n                }]}\r\n                link={[{\r\n                    rel: 'shortcut icon', href: '/favicon.ico',\r\n                }, {\r\n                    rel: 'stylesheet', href: 'https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.css',\r\n                }, {\r\n                    rel: 'stylesheet', href: 'https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.9.0/slick.css',\r\n                }, {\r\n                    rel: 'stylesheet', href: 'https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.9.0/slick-theme.css',\r\n                }]}\r\n            />\r\n            <AppLayout>\r\n                <Component {...pageProps} />\r\n            </AppLayout>\r\n        </Provider>\r\n        </Container>\r\n    );\r\n};\r\n\r\n\r\nNodeBird.propTypes = {\r\n    Component: PropTypes.elementType.isRequired,\r\n    store: PropTypes.object.isRequired,\r\n    pageProps: PropTypes.object.isRequired,\r\n};\r\n//SSR 을 진행할 때 서버인 경우와 클라이언티인 경우를 두 가지 경우를 생각해야 하기 때문에 3항 연산자를 이용하여 구분을 해주어야한다.\r\nNodeBird.getInitialProps = async (context) => {\r\n    console.log(context);\r\n    const { ctx, Component } = context;\r\n    let pageProps = {};\r\n    const state = ctx.store.getState();\r\n    const cookie = ctx.isServer ? ctx.req.headers.cookie : '';\r\n    console.log('cookie',cookie);\r\n    if(ctx.isServer && cookie){\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    if(!state.user.me){\r\n        ctx.store.dispatch({\r\n            type: LOAD_USER_REQUEST,\r\n        });\r\n    }\r\n    if (Component.getInitialProps) {\r\n        pageProps = await Component.getInitialProps(ctx);\r\n    }\r\n    return { pageProps };\r\n};\r\n\r\nconst configureStore = (initialState, options) => {\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const middlewares = [sagaMiddleware];\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n        ? compose(applyMiddleware(...middlewares))\r\n        : compose(\r\n            applyMiddleware(...middlewares),\r\n            !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\r\n        );\r\n    const store = createStore(reducer, initialState, enhancer);\r\n    store.sagaTask = sagaMiddleware.run(rootSaga);\r\n    return store;\r\n};\r\n\r\nexport default withRedux(configureStore)(withReduxSaga(NodeBird));"]},"metadata":{},"sourceType":"module"}