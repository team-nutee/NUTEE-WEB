{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Input, Checkbox, Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Router from 'next/router';\nimport { SIGN_UP_REQUEST, SIGN_UP_RESET } from \"../reducers/user\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst TextInput = ({\n  value\n}) => {\n  return __jsx(\"div\", null, value);\n};\n\nTextInput.propTypes = {\n  value: PropTypes.string\n};\nexport const useInput = (initValue = null) => {\n  const {\n    0: value,\n    1: setValue\n  } = useState(initValue);\n  const handler = useCallback(e => {\n    //useCallback-> 함수 내부에서 쓰는 state를 deps 배열에 넣는다.\n    setValue(e.target.value);\n  }, []);\n  return [value, handler, setValue];\n};\n\nconst Signup = () => {\n  const {\n    0: term,\n    1: setTerm\n  } = useState(false);\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false);\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false);\n  const [id, onChangeId, setId] = useInput('');\n  const [nick, onChangeNick, setNick] = useInput('');\n  const [password, onChangePassword, setPassword] = useInput('');\n  const {\n    0: passwordCheck,\n    1: setPasswordCheck\n  } = useState('');\n  const dispatch = useDispatch();\n  const {\n    isSigningUp,\n    isSignedUp,\n    me\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    if (me) {\n      alert('로그인 했으니 메인 페이지로 이동합니다.');\n      Router.push('/'); //해당 페이지로 이동\n    }\n  }, [me && me.id]); //웬만하면 객체와 객체를 비교하지 않는게 좋다. 연산이 어려워진다.\n  //me라는 객체를 비교하는 것보다, 그 안의 고유 데이터를 사용해서 비교하자.\n\n  useEffect(() => {\n    if (isSignedUp) {\n      alert('회원가입 성공');\n      dispatch({\n        type: SIGN_UP_RESET\n      });\n    }\n  }, [isSignedUp]);\n  const onSubmit = useCallback(e => {\n    e.preventDefault();\n\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        userId: id,\n        password,\n        nickname: nick\n      }\n    });\n\n    if (!isSignedUp) {\n      setId('');\n      setNick('');\n      setPassword('');\n      setPasswordCheck('');\n      setTerm(false);\n    }\n  }, [id, nick, password, passwordCheck, term]);\n  const onChangePasswordCheck = useCallback(e => {\n    setPasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  }, [password]);\n  const onChangeTerm = useCallback(e => {\n    setTermError(false);\n    setTerm(e.target.checked);\n  }, []);\n  return __jsx(Paper, {\n    zDepth: 1\n  }, __jsx(\"div\", {\n    style: {\n      background: '#effbf5',\n      height: '700px',\n      paddingBottom: '45%'\n    }\n  }, __jsx(\"h1\", {\n    style: {\n      textAlign: \"center\"\n    }\n  }, \"\\uC0C8 \\uACC4\\uC815 \\uB9CC\\uB4E4\\uAE30\"), __jsx(\"h3\", {\n    style: {\n      textAlign: \"center\"\n    }\n  }, \"\\uBE60\\uB974\\uACE0 \\uC27D\\uC2B5\\uB2C8\\uB2E4.\"), __jsx(Form, {\n    onSubmit: onSubmit,\n    style: {\n      padding: 10\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: '30%',\n      margin: '0 auto'\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\"\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    required: true,\n    onChange: onChangeId\n  })), __jsx(\"div\", {\n    style: {\n      width: '30%',\n      margin: '0 auto'\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-nick\"\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-nick\",\n    value: nick,\n    required: true,\n    onChange: onChangeNick\n  })), __jsx(\"div\", {\n    style: {\n      width: '30%',\n      margin: '0 auto'\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    required: true,\n    onChange: onChangePassword\n  })), __jsx(\"div\", {\n    style: {\n      width: '30%',\n      margin: '0 auto'\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password-check\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-password-check\",\n    type: \"password\",\n    value: passwordCheck,\n    required: true,\n    onChange: onChangePasswordCheck\n  }), passwordError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    style: {\n      width: '30%',\n      margin: '0 auto'\n    }\n  }, __jsx(Checkbox, {\n    name: \"user-term\",\n    value: term,\n    onChange: onChangeTerm\n  }, \"\\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"), termError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    }\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    style: {\n      marginTop: 10,\n      width: '30%',\n      margin: '0 auto'\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: isSigningUp\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\")))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["C:/Users/mf311/IdeaProjects/NUTEE-WEB/front/containers/Signup.js"],"names":["React","useState","useCallback","useEffect","Form","Input","Checkbox","Button","PropTypes","useDispatch","useSelector","Router","SIGN_UP_REQUEST","SIGN_UP_RESET","Paper","TextInput","value","propTypes","string","useInput","initValue","setValue","handler","e","target","Signup","term","setTerm","passwordError","setPasswordError","termError","setTermError","id","onChangeId","setId","nick","onChangeNick","setNick","password","onChangePassword","setPassword","passwordCheck","setPasswordCheck","dispatch","isSigningUp","isSignedUp","me","state","user","alert","push","type","onSubmit","preventDefault","data","userId","nickname","onChangePasswordCheck","onChangeTerm","checked","background","height","paddingBottom","textAlign","padding","width","margin","color","marginTop"],"mappings":"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","sourcesContent":["import React, {useState, useCallback, useEffect} from 'react';\r\nimport {Form, Input, Checkbox, Button} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Router from 'next/router';\r\nimport {SIGN_UP_REQUEST, SIGN_UP_RESET} from \"../reducers/user\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst TextInput = ({value})=>{\r\n    return(\r\n        <div>{value}</div>\r\n    )\r\n};\r\n\r\nTextInput.propTypes = {\r\n    value:PropTypes.string\r\n};\r\n\r\nexport const useInput = (initValue = null) =>{\r\n    const [value,setValue] = useState(initValue);\r\n    const handler = useCallback((e) =>{//useCallback-> 함수 내부에서 쓰는 state를 deps 배열에 넣는다.\r\n        setValue(e.target.value);\r\n    },[]);\r\n    return [value,handler,setValue];\r\n};\r\n\r\nconst Signup = () =>{\r\n    const [term,setTerm] = useState(false);\r\n    const [passwordError,setPasswordError] = useState(false);\r\n    const [termError,setTermError] = useState(false);\r\n\r\n    const [id, onChangeId, setId] = useInput('');\r\n    const [nick, onChangeNick, setNick] = useInput('');\r\n    const [password, onChangePassword, setPassword] = useInput('');\r\n    const [passwordCheck,setPasswordCheck] = useState('');\r\n    const dispatch = useDispatch();\r\n    const {isSigningUp,isSignedUp, me} = useSelector(state=>state.user);\r\n\r\n    useEffect(() => {\r\n        if (me) {\r\n            alert('로그인 했으니 메인 페이지로 이동합니다.');\r\n            Router.push('/');//해당 페이지로 이동\r\n        }\r\n    },[me && me.id]);   //웬만하면 객체와 객체를 비교하지 않는게 좋다. 연산이 어려워진다.\r\n                        //me라는 객체를 비교하는 것보다, 그 안의 고유 데이터를 사용해서 비교하자.\r\n\r\n    useEffect(() => {\r\n        if (isSignedUp) {\r\n            alert('회원가입 성공');\r\n            dispatch({\r\n                type: SIGN_UP_RESET\r\n            });\r\n        }\r\n    },[isSignedUp]);\r\n\r\n    const onSubmit = useCallback((e) => {\r\n        e.preventDefault();\r\n        if(password!==passwordCheck){\r\n            return setPasswordError(true);\r\n        }\r\n        if(!term){\r\n            return setTermError(true);\r\n        }\r\n        dispatch({\r\n            type: SIGN_UP_REQUEST,\r\n            data:{\r\n                userId: id,\r\n                password,\r\n                nickname:nick,\r\n            }\r\n        });\r\n        if(!isSignedUp){\r\n            setId('');\r\n            setNick('');\r\n            setPassword('');\r\n            setPasswordCheck('');\r\n            setTerm(false);\r\n        }\r\n    },[id, nick, password, passwordCheck, term]);\r\n\r\n    const onChangePasswordCheck = useCallback((e) => {\r\n        setPasswordError(e.target.value !== password);\r\n        setPasswordCheck(e.target.value);\r\n    },[password]);\r\n\r\n    const onChangeTerm = useCallback((e) => {\r\n        setTermError(false);\r\n        setTerm(e.target.checked);\r\n    },[]);\r\n\r\n    return(\r\n        <Paper zDepth={1}>\r\n        <div style={{background: '#effbf5', height:'700px', paddingBottom:'45%'}}>\r\n            <h1 style={{textAlign:\"center\"}}>새 계정 만들기</h1>\r\n            <h3 style={{textAlign:\"center\"}}>빠르고 쉽습니다.</h3>\r\n            <Form onSubmit={onSubmit} style={{padding:10 }}>\r\n                <div style={{width:'30%', margin:'0 auto'}}>\r\n                    <label htmlFor=\"user-id\">아이디</label>\r\n                    <br />\r\n                    <Input name=\"user-id\" value={id} required onChange={onChangeId}/>\r\n                </div>\r\n                <div style={{width:'30%', margin:'0 auto'}}>\r\n                    <label htmlFor=\"user-nick\">닉네임</label>\r\n                    <br />\r\n                    <Input name=\"user-nick\" value={nick} required onChange={onChangeNick}/>\r\n                </div>\r\n                <div style={{width:'30%', margin:'0 auto'}}>\r\n                    <label htmlFor=\"user-password\">비밀번호</label>\r\n                    <br />\r\n                    <Input name=\"user-password\" type=\"password\" value={password} required onChange={onChangePassword}/>\r\n                </div>\r\n                <div style={{width:'30%', margin:'0 auto'}}>\r\n                    <label htmlFor=\"user-password-check\">비밀번호 확인</label>\r\n                    <br />\r\n                    <Input name=\"user-password-check\" type=\"password\" value={passwordCheck} required onChange={onChangePasswordCheck}/>\r\n                    {passwordError && <div style={{color:'red'}}>비밀번호가 일치하지 않습니다.</div>}\r\n                </div>\r\n                <div style={{width:'30%', margin:'0 auto'}}>\r\n                    <Checkbox name=\"user-term\" value={term} onChange={onChangeTerm}>동의합니다.</Checkbox>\r\n                    {termError && <div style={{color:'red'}}>약관에 동의하셔야 합니다.</div>}\r\n                </div>\r\n                <div style={{marginTop: 10, width:'30%', margin:'0 auto'}}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={isSigningUp}>가입하기</Button>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n        </Paper>\r\n    )\r\n};\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}