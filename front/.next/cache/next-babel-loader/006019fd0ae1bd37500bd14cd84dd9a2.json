{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect, useRef } from 'react';\nimport { Form, Input, Button, Icon } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_POST_REQUEST, REMOVE_IMAGE, UPLOAD_IMAGES_REQUEST } from '../reducers/post';\nimport TextareaAutosize from \"react-textarea-autosize\";\n\nvar PostForm = function PostForm() {\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      isAddingPost = _useSelector.isAddingPost,\n      postAdded = _useSelector.postAdded;\n\n  var imageInput = useRef();\n  useEffect(function () {\n    if (postAdded) {\n      setText('');\n    }\n  }, [postAdded]);\n  var onSubmitForm = useCallback(function (e) {\n    e.preventDefault();\n\n    if (!text || !text.trim()) {\n      return alert('게시글을 작성하세요.');\n    }\n\n    var formData = new FormData();\n    imagePaths.forEach(function (i) {\n      formData.append('image', i);\n    });\n    formData.append('content', text);\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData\n    });\n  }, [text, imagePaths]);\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  }, []);\n  var onChangeImages = useCallback(function (e) {\n    console.log(e.target.files);\n    var imageFormData = new FormData();\n    [].forEach.call(e.target.files, function (f) {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []);\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onRemoveImage = useCallback(function (index) {\n    return function () {\n      dispatch({\n        type: REMOVE_IMAGE,\n        index: index\n      });\n    };\n  }, []);\n  return __jsx(Form, {\n    style: {\n      margin: '0px 0 10px'\n    },\n    encType: \"multipart/form-data\",\n    onSubmit: onSubmitForm\n  }, __jsx(\"div\", {\n    style: {\n      height: \"auto\",\n      overflow: \"hidden\",\n      background: 'white',\n      paddingBottom: '5px',\n      border: '1px solid #e6e6e6'\n    }\n  }, __jsx(\"div\", {\n    style: {\n      overflow: 'hidden',\n      height: 'auto'\n    }\n  }, __jsx(TextareaAutosize, {\n    style: {\n      margin: '5px',\n      resize: 'none',\n      lineHeight: '30px',\n      overflowY: 'hidden',\n      border: 'none',\n      width: '98.5%',\n      minHeight: '80px',\n      height: 'auto'\n    },\n    placeholder: \"\\uC624\\uB298 \\uD798\\uB4E0 \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    value: text,\n    onChange: onChangeText,\n    autoFocus: true\n  }), __jsx(\"hr\", {\n    style: {\n      borderWidth: '1px 0px 0px 0px',\n      borderColor: '#e6e6e6',\n      width: '98%',\n      align: 'center'\n    }\n  }), __jsx(\"div\", {\n    style: {\n      overflow: 'hidden',\n      height: \"auto\"\n    }\n  }, imagePaths.map(function (v, i) {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        margin: '5px',\n        width: '48.2%',\n        \"float\": \"left\",\n        height: '180px',\n        background: '#F2F2F2',\n        textAlign: 'center'\n      }\n    }, __jsx(\"div\", {\n      style: {\n        textAlign: 'right',\n        marginRight: '15px'\n      }\n    }, __jsx(Icon, {\n      style: {\n        color: 'black',\n        position: 'absolute'\n      },\n      type: \"close\",\n      onClick: onRemoveImage(i)\n    })), __jsx(\"img\", {\n      src: \"http://localhost:9425/\".concat(v),\n      style: {\n        maxWidth: '100%',\n        height: '100%'\n      },\n      alt: v\n    }));\n  })), __jsx(\"div\", {\n    style: {\n      marginBottom: '5px',\n      marginTop: '5px'\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    onChange: onChangeImages\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    style: {\n      marginLeft: '5px',\n      borderRadius: '0'\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": 'right',\n      marginRight: '5px',\n      borderRadius: '0'\n    },\n    htmlType: \"submit\",\n    loading: isAddingPost\n  }, \"\\uC791\\uC131\")))));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/mf311/IdeaProjects/NUTEE-WEB/front/containers/PostForm.js"],"names":["React","useCallback","useState","useEffect","useRef","Form","Input","Button","Icon","useSelector","useDispatch","ADD_POST_REQUEST","REMOVE_IMAGE","UPLOAD_IMAGES_REQUEST","TextareaAutosize","PostForm","dispatch","text","setText","state","post","imagePaths","isAddingPost","postAdded","imageInput","onSubmitForm","e","preventDefault","trim","alert","formData","FormData","forEach","i","append","type","data","onChangeText","target","value","onChangeImages","console","log","files","imageFormData","call","f","onClickImageUpload","current","click","onRemoveImage","index","margin","height","overflow","background","paddingBottom","border","resize","lineHeight","overflowY","width","minHeight","borderWidth","borderColor","align","map","v","textAlign","marginRight","color","position","maxWidth","marginBottom","marginTop","marginLeft","borderRadius"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,SAAvC,EAAkDC,MAAlD,QAAgE,OAAhE;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,IAA9B,QAA0C,MAA1C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,gBAAT,EAA2BC,YAA3B,EAAyCC,qBAAzC,QAAsE,kBAAtE;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnB,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AADmB,kBAEKR,QAAQ,CAAC,EAAD,CAFb;AAAA,MAEZe,IAFY;AAAA,MAENC,OAFM;;AAAA,qBAG6BT,WAAW,CAAC,UAAAU,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAHxC;AAAA,MAGXC,UAHW,gBAGXA,UAHW;AAAA,MAGCC,YAHD,gBAGCA,YAHD;AAAA,MAGeC,SAHf,gBAGeA,SAHf;;AAInB,MAAMC,UAAU,GAAGpB,MAAM,EAAzB;AAEAD,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIoB,SAAJ,EAAe;AACXL,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH;AACJ,GAJQ,EAIN,CAACK,SAAD,CAJM,CAAT;AAMA,MAAME,YAAY,GAAGxB,WAAW,CAAC,UAACyB,CAAD,EAAO;AACpCA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI,CAACV,IAAD,IAAS,CAACA,IAAI,CAACW,IAAL,EAAd,EAA2B;AACvB,aAAOC,KAAK,CAAC,aAAD,CAAZ;AACH;;AACD,QAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAV,IAAAA,UAAU,CAACW,OAAX,CAAmB,UAACC,CAAD,EAAO;AACtBH,MAAAA,QAAQ,CAACI,MAAT,CAAgB,OAAhB,EAAyBD,CAAzB;AACH,KAFD;AAGAH,IAAAA,QAAQ,CAACI,MAAT,CAAgB,SAAhB,EAA2BjB,IAA3B;AACAD,IAAAA,QAAQ,CAAC;AACLmB,MAAAA,IAAI,EAAExB,gBADD;AAELyB,MAAAA,IAAI,EAAEN;AAFD,KAAD,CAAR;AAIH,GAd+B,EAc7B,CAACb,IAAD,EAAOI,UAAP,CAd6B,CAAhC;AAgBA,MAAMgB,YAAY,GAAGpC,WAAW,CAAC,UAACyB,CAAD,EAAO;AACpCR,IAAAA,OAAO,CAACQ,CAAC,CAACY,MAAF,CAASC,KAAV,CAAP;AACH,GAF+B,EAE7B,EAF6B,CAAhC;AAIA,MAAMC,cAAc,GAAGvC,WAAW,CAAC,UAACyB,CAAD,EAAO;AACtCe,IAAAA,OAAO,CAACC,GAAR,CAAYhB,CAAC,CAACY,MAAF,CAASK,KAArB;AACA,QAAMC,aAAa,GAAG,IAAIb,QAAJ,EAAtB;AACA,OAAGC,OAAH,CAAWa,IAAX,CAAgBnB,CAAC,CAACY,MAAF,CAASK,KAAzB,EAAgC,UAACG,CAAD,EAAO;AACnCF,MAAAA,aAAa,CAACV,MAAd,CAAqB,OAArB,EAA8BY,CAA9B;AACH,KAFD;AAGA9B,IAAAA,QAAQ,CAAC;AACLmB,MAAAA,IAAI,EAAEtB,qBADD;AAELuB,MAAAA,IAAI,EAAEQ;AAFD,KAAD,CAAR;AAIH,GAViC,EAU/B,EAV+B,CAAlC;AAYA,MAAMG,kBAAkB,GAAG9C,WAAW,CAAC,YAAM;AACzCuB,IAAAA,UAAU,CAACwB,OAAX,CAAmBC,KAAnB;AACH,GAFqC,EAEnC,CAACzB,UAAU,CAACwB,OAAZ,CAFmC,CAAtC;AAIA,MAAME,aAAa,GAAGjD,WAAW,CAAC,UAAAkD,KAAK;AAAA,WAAI,YAAM;AAC7CnC,MAAAA,QAAQ,CAAC;AACLmB,QAAAA,IAAI,EAAEvB,YADD;AAELuC,QAAAA,KAAK,EAALA;AAFK,OAAD,CAAR;AAIH,KALsC;AAAA,GAAN,EAK9B,EAL8B,CAAjC;AAOA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAb;AAAuC,IAAA,OAAO,EAAC,qBAA/C;AAAqE,IAAA,QAAQ,EAAE3B;AAA/E,KACI;AAAK,IAAA,KAAK,EAAE;AAAC4B,MAAAA,MAAM,EAAE,MAAT;AAAiBC,MAAAA,QAAQ,EAAC,QAA1B;AAAoCC,MAAAA,UAAU,EAAC,OAA/C;AAAwDC,MAAAA,aAAa,EAAC,KAAtE;AAA6EC,MAAAA,MAAM,EAAC;AAApF;AAAZ,KACI;AAAK,IAAA,KAAK,EAAE;AAACH,MAAAA,QAAQ,EAAC,QAAV;AAAoBD,MAAAA,MAAM,EAAC;AAA3B;AAAZ,KACI,MAAC,gBAAD;AACI,IAAA,KAAK,EAAE;AAACD,MAAAA,MAAM,EAAC,KAAR;AAAeM,MAAAA,MAAM,EAAC,MAAtB;AAA8BC,MAAAA,UAAU,EAAC,MAAzC;AAAiDC,MAAAA,SAAS,EAAC,QAA3D;AAAqEH,MAAAA,MAAM,EAAC,MAA5E;AAAoFI,MAAAA,KAAK,EAAC,OAA1F;AAAmGC,MAAAA,SAAS,EAAC,MAA7G;AAAqHT,MAAAA,MAAM,EAAC;AAA5H,KADX;AAEI,IAAA,WAAW,EAAC,kEAFhB;AAGI,IAAA,KAAK,EAAEpC,IAHX;AAII,IAAA,QAAQ,EAAEoB,YAJd;AAKI,IAAA,SAAS,EAAE;AALf,IADJ,EAOI;AAAI,IAAA,KAAK,EAAE;AAAC0B,MAAAA,WAAW,EAAC,iBAAb;AAA+BC,MAAAA,WAAW,EAAC,SAA3C;AAAsDH,MAAAA,KAAK,EAAC,KAA5D;AAAmEI,MAAAA,KAAK,EAAC;AAAzE;AAAX,IAPJ,EAQI;AAAK,IAAA,KAAK,EAAE;AAAEX,MAAAA,QAAQ,EAAC,QAAX;AAAqBD,MAAAA,MAAM,EAAC;AAA5B;AAAZ,KACKhC,UAAU,CAAC6C,GAAX,CAAe,UAACC,CAAD,EAAIlC,CAAJ;AAAA,WACZ;AAAK,MAAA,GAAG,EAAEkC,CAAV;AAAa,MAAA,KAAK,EAAE;AAACf,QAAAA,MAAM,EAAC,KAAR;AAAeS,QAAAA,KAAK,EAAC,OAArB;AAA8B,iBAAM,MAApC;AAA4CR,QAAAA,MAAM,EAAC,OAAnD;AAA4DE,QAAAA,UAAU,EAAC,SAAvE;AAAkFa,QAAAA,SAAS,EAAC;AAA5F;AAApB,OACI;AAAK,MAAA,KAAK,EAAE;AAACA,QAAAA,SAAS,EAAC,OAAX;AAAoBC,QAAAA,WAAW,EAAC;AAAhC;AAAZ,OACI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,QAAQ,EAAC;AAA3B,OAAb;AACM,MAAA,IAAI,EAAC,OADX;AAEM,MAAA,OAAO,EAAErB,aAAa,CAACjB,CAAD;AAF5B,MADJ,CADJ,EAOI;AAAK,MAAA,GAAG,kCAA2BkC,CAA3B,CAAR;AAAwC,MAAA,KAAK,EAAE;AAC3CK,QAAAA,QAAQ,EAAE,MADiC;AAE3CnB,QAAAA,MAAM,EAAE;AAFmC,OAA/C;AAGG,MAAA,GAAG,EAAEc;AAHR,MAPJ,CADY;AAAA,GAAf,CADL,CARJ,EAwBI;AAAK,IAAA,KAAK,EAAE;AAAEM,MAAAA,YAAY,EAAC,KAAf;AAAsBC,MAAAA,SAAS,EAAC;AAAhC;AAAZ,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,MAA3B;AAA4B,IAAA,MAAM,MAAlC;AAAmC,IAAA,GAAG,EAAElD,UAAxC;AAAoD,IAAA,QAAQ,EAAEgB;AAA9D,IADJ,EAEI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEO,kBAAjB;AAAqC,IAAA,KAAK,EAAE;AAAC4B,MAAAA,UAAU,EAAC,KAAZ;AAAmBC,MAAAA,YAAY,EAAC;AAAhC;AAA5C,6CAFJ,EAGI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,KAAK,EAAE;AAAE,eAAO,OAAT;AAAkBP,MAAAA,WAAW,EAAC,KAA9B;AAAqCO,MAAAA,YAAY,EAAC;AAAlD,KAA9B;AAAsF,IAAA,QAAQ,EAAC,QAA/F;AAAwG,IAAA,OAAO,EAAEtD;AAAjH,oBAHJ,CAxBJ,CADJ,CADJ,CADJ;AAoCH,CA3FD;;AA6FA,eAAeP,QAAf","sourcesContent":["import React, { useCallback, useState, useEffect, useRef } from 'react';\r\nimport { Form, Input, Button, Icon } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ADD_POST_REQUEST, REMOVE_IMAGE, UPLOAD_IMAGES_REQUEST } from '../reducers/post';\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\n\r\nconst PostForm = () => {\r\n    const dispatch = useDispatch();\r\n    const [text, setText] = useState('');\r\n    const { imagePaths, isAddingPost, postAdded } = useSelector(state => state.post);\r\n    const imageInput = useRef();\r\n\r\n    useEffect(() => {\r\n        if (postAdded) {\r\n            setText('');\r\n        }\r\n    }, [postAdded]);\r\n\r\n    const onSubmitForm = useCallback((e) => {\r\n        e.preventDefault();\r\n        if (!text || !text.trim()) {\r\n            return alert('게시글을 작성하세요.');\r\n        }\r\n        const formData = new FormData();\r\n        imagePaths.forEach((i) => {\r\n            formData.append('image', i);\r\n        });\r\n        formData.append('content', text);\r\n        dispatch({\r\n            type: ADD_POST_REQUEST,\r\n            data: formData,\r\n        });\r\n    }, [text, imagePaths]);\r\n\r\n    const onChangeText = useCallback((e) => {\r\n        setText(e.target.value);\r\n    }, []);\r\n\r\n    const onChangeImages = useCallback((e) => {\r\n        console.log(e.target.files);\r\n        const imageFormData = new FormData();\r\n        [].forEach.call(e.target.files, (f) => {\r\n            imageFormData.append('image', f);\r\n        });\r\n        dispatch({\r\n            type: UPLOAD_IMAGES_REQUEST,\r\n            data: imageFormData,\r\n        });\r\n    }, []);\r\n\r\n    const onClickImageUpload = useCallback(() => {\r\n        imageInput.current.click();\r\n    }, [imageInput.current]);\r\n\r\n    const onRemoveImage = useCallback(index => () => {\r\n        dispatch({\r\n            type: REMOVE_IMAGE,\r\n            index,\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <Form style={{ margin: '0px 0 10px' }} encType=\"multipart/form-data\" onSubmit={onSubmitForm}>\r\n            <div style={{height: \"auto\", overflow:\"hidden\", background:'white', paddingBottom:'5px', border:'1px solid #e6e6e6'}}>\r\n                <div style={{overflow:'hidden', height:'auto'}}>\r\n                    <TextareaAutosize\r\n                        style={{margin:'5px', resize:'none', lineHeight:'30px', overflowY:'hidden', border:'none', width:'98.5%', minHeight:'80px', height:'auto'}}\r\n                        placeholder=\"오늘 힘든 일이 있었나요?\"\r\n                        value={text}\r\n                        onChange={onChangeText}\r\n                        autoFocus={true} />\r\n                    <hr style={{borderWidth:'1px 0px 0px 0px',borderColor:'#e6e6e6', width:'98%', align:'center'}}/>\r\n                    <div style={{ overflow:'hidden', height:\"auto\"}}>\r\n                        {imagePaths.map((v, i) => (\r\n                            <div key={v} style={{margin:'5px', width:'48.2%', float:\"left\", height:'180px', background:'#F2F2F2', textAlign:'center'}}>\r\n                                <div style={{textAlign:'right', marginRight:'15px'}}>\r\n                                    <Icon style={{ color: 'black', position:'absolute'}}\r\n                                          type=\"close\"\r\n                                          onClick={onRemoveImage(i)}\r\n                                    />\r\n                                </div>\r\n                                <img src={`http://localhost:9425/${v}`} style={{\r\n                                    maxWidth: '100%',\r\n                                    height: '100%'\r\n                                }} alt={v}/>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div style={{ marginBottom:'5px', marginTop:'5px'}}>\r\n                        <input type=\"file\" multiple hidden ref={imageInput} onChange={onChangeImages} />\r\n                        <Button onClick={onClickImageUpload} style={{marginLeft:'5px', borderRadius:'0'}}>이미지 업로드</Button>\r\n                        <Button type=\"primary\" style={{ float: 'right', marginRight:'5px', borderRadius:'0'}} htmlType=\"submit\" loading={isAddingPost}>작성</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}