{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, Modal } from 'antd';\nimport ImagesZoom from './ImagesZoom';\n\nconst PostImages = ({\n  images\n}) => {\n  const {\n    0: showImagesZoom,\n    1: setShowImagesZoom\n  } = useState(false);\n  const onZoom = useCallback(() => {\n    setShowImagesZoom(true);\n  }, []);\n  const onClose = useCallback(() => {\n    setShowImagesZoom(false);\n  }, []);\n  const onBackDrop = useCallback(() => {\n    setShowImagesZoom(false);\n  }, []);\n\n  if (images.length === 1) {\n    return __jsx(React.Fragment, null, __jsx(\"img\", {\n      src: `http://localhost:9425/${images[0].src}`,\n      onClick: onZoom\n    }), showImagesZoom && __jsx(ImagesZoom, {\n      images: images,\n      onClose: onClose,\n      onBackDrop: onBackDrop\n    }));\n  }\n\n  if (images.length === 2) {\n    return __jsx(React.Fragment, null, __jsx(\"div\", null, __jsx(\"img\", {\n      src: `http://localhost:9425/${images[0].src}`,\n      width: \"50%\",\n      onClick: onZoom\n    }), __jsx(\"img\", {\n      src: `http://localhost:9425/${images[1].src}`,\n      width: \"50%\",\n      onClick: onZoom\n    })), showImagesZoom && __jsx(ImagesZoom, {\n      images: images,\n      onClose: onClose,\n      onBackDrop: onBackDrop\n    }));\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", null, __jsx(\"img\", {\n    src: `http://localhost:9425/${images[0].src}`,\n    width: \"50%\",\n    onClick: onZoom\n  }), __jsx(\"div\", {\n    style: {\n      display: 'inline-block',\n      width: '50%',\n      textAlign: 'center',\n      verticalAlign: 'middle'\n    },\n    onClick: onZoom\n  }, __jsx(Icon, {\n    type: \"plus\"\n  }), __jsx(\"br\", null), images.length - 1, \"\\uAC1C\\uC758 \\uC0AC\\uC9C4 \\uB354\\uBCF4\\uAE30\")), showImagesZoom && __jsx(ImagesZoom, {\n    images: images,\n    onClose: onClose,\n    onBackDrop: onBackDrop\n  }));\n};\n\nPostImages.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string\n  })).isRequired\n};\nexport default PostImages;","map":{"version":3,"sources":["C:/Users/mf311/IdeaProjects/NUTEE-WEB/front/components/PostImages.js"],"names":["React","useEffect","useCallback","useState","PropTypes","Icon","Modal","ImagesZoom","PostImages","images","showImagesZoom","setShowImagesZoom","onZoom","onClose","onBackDrop","length","src","display","width","textAlign","verticalAlign","propTypes","arrayOf","shape","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,IAAR,EAAcC,KAAd,QAA0B,MAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC/B,QAAM;AAAA,OAACC,cAAD;AAAA,OAAiBC;AAAjB,MAAsCR,QAAQ,CAAC,KAAD,CAApD;AAEA,QAAMS,MAAM,GAAGV,WAAW,CAAC,MAAM;AAC7BS,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,GAFyB,EAEvB,EAFuB,CAA1B;AAIA,QAAME,OAAO,GAAGX,WAAW,CAAC,MAAM;AAC9BS,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,GAF0B,EAExB,EAFwB,CAA3B;AAIA,QAAMG,UAAU,GAAGZ,WAAW,CAAC,MAAM;AACjCS,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,GAF6B,EAE3B,EAF2B,CAA9B;;AAIA,MAAIF,MAAM,CAACM,MAAP,KAAkB,CAAtB,EAAyB;AACrB,WACI,4BACI;AAAK,MAAA,GAAG,EAAG,yBAAwBN,MAAM,CAAC,CAAD,CAAN,CAAUO,GAAI,EAAjD;AAAoD,MAAA,OAAO,EAAEJ;AAA7D,MADJ,EAEKF,cAAc,IAAI,MAAC,UAAD;AAAY,MAAA,MAAM,EAAED,MAApB;AAA4B,MAAA,OAAO,EAAEI,OAArC;AAA8C,MAAA,UAAU,EAAEC;AAA1D,MAFvB,CADJ;AAMH;;AACD,MAAIL,MAAM,CAACM,MAAP,KAAkB,CAAtB,EAAyB;AACrB,WACI,4BACI,mBACI;AAAK,MAAA,GAAG,EAAG,yBAAwBN,MAAM,CAAC,CAAD,CAAN,CAAUO,GAAI,EAAjD;AAAoD,MAAA,KAAK,EAAC,KAA1D;AAAgE,MAAA,OAAO,EAAEJ;AAAzE,MADJ,EAEI;AAAK,MAAA,GAAG,EAAG,yBAAwBH,MAAM,CAAC,CAAD,CAAN,CAAUO,GAAI,EAAjD;AAAoD,MAAA,KAAK,EAAC,KAA1D;AAAgE,MAAA,OAAO,EAAEJ;AAAzE,MAFJ,CADJ,EAKKF,cAAc,IAAI,MAAC,UAAD;AAAY,MAAA,MAAM,EAAED,MAApB;AAA4B,MAAA,OAAO,EAAEI,OAArC;AAA8C,MAAA,UAAU,EAAEC;AAA1D,MALvB,CADJ;AASH;;AACD,SACI,4BACI,mBACI;AAAK,IAAA,GAAG,EAAG,yBAAwBL,MAAM,CAAC,CAAD,CAAN,CAAUO,GAAI,EAAjD;AAAoD,IAAA,KAAK,EAAC,KAA1D;AAAgE,IAAA,OAAO,EAAEJ;AAAzE,IADJ,EAEI;AAAK,IAAA,KAAK,EAAE;AAAEK,MAAAA,OAAO,EAAE,cAAX;AAA2BC,MAAAA,KAAK,EAAE,KAAlC;AAAyCC,MAAAA,SAAS,EAAE,QAApD;AAA8DC,MAAAA,aAAa,EAAE;AAA7E,KAAZ;AAAqG,IAAA,OAAO,EAAER;AAA9G,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,IADJ,EAEI,iBAFJ,EAGKH,MAAM,CAACM,MAAP,GAAgB,CAHrB,iDAFJ,CADJ,EAUKL,cAAc,IAAI,MAAC,UAAD;AAAY,IAAA,MAAM,EAAED,MAApB;AAA4B,IAAA,OAAO,EAAEI,OAArC;AAA8C,IAAA,UAAU,EAAEC;AAA1D,IAVvB,CADJ;AAcH,CAhDD;;AAkDAN,UAAU,CAACa,SAAX,GAAuB;AACnBZ,EAAAA,MAAM,EAAEL,SAAS,CAACkB,OAAV,CAAkBlB,SAAS,CAACmB,KAAV,CAAgB;AACtCP,IAAAA,GAAG,EAAEZ,SAAS,CAACoB;AADuB,GAAhB,CAAlB,EAEJC;AAHe,CAAvB;AAMA,eAAejB,UAAf","sourcesContent":["import React, { useEffect, useCallback, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Icon, Modal} from 'antd';\r\nimport ImagesZoom from './ImagesZoom';\r\n\r\nconst PostImages = ({ images }) => {\r\n    const [showImagesZoom, setShowImagesZoom] = useState(false);\r\n\r\n    const onZoom = useCallback(() => {\r\n        setShowImagesZoom(true);\r\n    }, []);\r\n\r\n    const onClose = useCallback(() => {\r\n        setShowImagesZoom(false);\r\n    }, []);\r\n\r\n    const onBackDrop = useCallback(() => {\r\n        setShowImagesZoom(false);\r\n    }, []);\r\n\r\n    if (images.length === 1) {\r\n        return (\r\n            <>\r\n                <img src={`http://localhost:9425/${images[0].src}`} onClick={onZoom} />\r\n                {showImagesZoom && <ImagesZoom images={images} onClose={onClose} onBackDrop={onBackDrop} />}\r\n            </>\r\n        );\r\n    }\r\n    if (images.length === 2) {\r\n        return (\r\n            <>\r\n                <div>\r\n                    <img src={`http://localhost:9425/${images[0].src}`} width=\"50%\" onClick={onZoom} />\r\n                    <img src={`http://localhost:9425/${images[1].src}`} width=\"50%\" onClick={onZoom} />\r\n                </div>\r\n                {showImagesZoom && <ImagesZoom images={images} onClose={onClose} onBackDrop={onBackDrop} />}\r\n            </>\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n            <div>\r\n                <img src={`http://localhost:9425/${images[0].src}`} width=\"50%\" onClick={onZoom} />\r\n                <div style={{ display: 'inline-block', width: '50%', textAlign: 'center', verticalAlign: 'middle' }} onClick={onZoom}>\r\n                    <Icon type=\"plus\" />\r\n                    <br />\r\n                    {images.length - 1}\r\n                    개의 사진 더보기\r\n                </div>\r\n            </div>\r\n            {showImagesZoom && <ImagesZoom images={images} onClose={onClose} onBackDrop={onBackDrop} />}\r\n        </>\r\n    );\r\n};\r\n\r\nPostImages.propTypes = {\r\n    images: PropTypes.arrayOf(PropTypes.shape({\r\n        src: PropTypes.string,\r\n    })).isRequired,\r\n};\r\n\r\nexport default PostImages;"]},"metadata":{},"sourceType":"module"}