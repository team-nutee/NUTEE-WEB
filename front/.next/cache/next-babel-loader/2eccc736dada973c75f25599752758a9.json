{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useCallback, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PostForm from '../containers/PostForm';\nimport PostCard from '../containers/PostCard';\nimport { LOAD_MAIN_POSTS_REQUEST } from '../reducers/post';\n\nconst Home = () => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePost\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  const countRef = useRef([]);\n  const onScroll = useCallback(() => {\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n      if (hasMorePost) {\n        const lastId = mainPosts[mainPosts.length - 1].id;\n\n        if (!countRef.current.includes(lastId)) {\n          dispatch({\n            type: LOAD_MAIN_POSTS_REQUEST,\n            lastId\n          });\n          countRef.current.push(lastId);\n        }\n      }\n    }\n  }, [hasMorePost, mainPosts.length]);\n  useEffect(() => {\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length]);\n  return __jsx(\"div\", null, me && __jsx(PostForm, null), mainPosts.map(c => {\n    return __jsx(PostCard, {\n      key: c.id,\n      post: c\n    });\n  }));\n};\n\nHome.getInitialProps = async context => {\n  console.log(_Object$keys(context));\n  context.store.dispatch({\n    type: LOAD_MAIN_POSTS_REQUEST\n  });\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/mf311/IdeaProjects/NUTEE-WEB/front/pages/index.js"],"names":["React","useEffect","useCallback","useRef","useSelector","useDispatch","PostForm","PostCard","LOAD_MAIN_POSTS_REQUEST","Home","me","state","user","mainPosts","hasMorePost","post","dispatch","countRef","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","current","includes","type","push","addEventListener","removeEventListener","map","c","getInitialProps","context","console","log","store"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,EAAwCC,MAAxC,QAAsD,OAAtD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,uBAAT,QAAwC,kBAAxC;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAM;AAAEC,IAAAA;AAAF,MAASN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA1B;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA6BV,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACI,IAAhB,CAA9C;AACA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,QAAQ,GAAGd,MAAM,CAAC,EAAD,CAAvB;AAEA,QAAMe,QAAQ,GAAGhB,WAAW,CAAC,MAAM;AAC/B,QAAIiB,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GAAyDF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAArG,EAA0G;AACtG,UAAIV,WAAJ,EAAiB;AACb,cAAMW,MAAM,GAAGZ,SAAS,CAACA,SAAS,CAACa,MAAV,GAAmB,CAApB,CAAT,CAAgCC,EAA/C;;AACA,YAAI,CAACV,QAAQ,CAACW,OAAT,CAAiBC,QAAjB,CAA0BJ,MAA1B,CAAL,EAAwC;AACpCT,UAAAA,QAAQ,CAAC;AACLc,YAAAA,IAAI,EAAEtB,uBADD;AAELiB,YAAAA;AAFK,WAAD,CAAR;AAIAR,UAAAA,QAAQ,CAACW,OAAT,CAAiBG,IAAjB,CAAsBN,MAAtB;AACH;AACJ;AACJ;AACJ,GAb2B,EAazB,CAACX,WAAD,EAAcD,SAAS,CAACa,MAAxB,CAbyB,CAA5B;AAeAzB,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,MAAM,CAACa,gBAAP,CAAwB,QAAxB,EAAkCd,QAAlC;AACA,WAAO,MAAM;AACTC,MAAAA,MAAM,CAACc,mBAAP,CAA2B,QAA3B,EAAqCf,QAArC;AACH,KAFD;AAGH,GALQ,EAKN,CAACL,SAAS,CAACa,MAAX,CALM,CAAT;AAOA,SACI,mBACKhB,EAAE,IAAI,MAAC,QAAD,OADX,EAEKG,SAAS,CAACqB,GAAV,CAAeC,CAAD,IAAO;AAClB,WACI,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,CAAC,CAACR,EAAjB;AAAqB,MAAA,IAAI,EAAEQ;AAA3B,MADJ;AAGH,GAJA,CAFL,CADJ;AAUH,CAtCD;;AAwCA1B,IAAI,CAAC2B,eAAL,GAAuB,MAAOC,OAAP,IAAmB;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAYF,OAAZ,CAAZ;AACAA,EAAAA,OAAO,CAACG,KAAR,CAAcxB,QAAd,CAAuB;AACnBc,IAAAA,IAAI,EAAEtB;AADa,GAAvB;AAGH,CALD;;AAOA,eAAeC,IAAf","sourcesContent":["import React, { useEffect, useCallback, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PostForm from '../containers/PostForm';\r\nimport PostCard from '../containers/PostCard';\r\nimport { LOAD_MAIN_POSTS_REQUEST } from '../reducers/post';\r\n\r\nconst Home = () => {\r\n    const { me } = useSelector(state => state.user);\r\n    const { mainPosts, hasMorePost } = useSelector(state => state.post);\r\n    const dispatch = useDispatch();\r\n    const countRef = useRef([]);\r\n\r\n    const onScroll = useCallback(() => {\r\n        if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n            if (hasMorePost) {\r\n                const lastId = mainPosts[mainPosts.length - 1].id;\r\n                if (!countRef.current.includes(lastId)) {\r\n                    dispatch({\r\n                        type: LOAD_MAIN_POSTS_REQUEST,\r\n                        lastId,\r\n                    });\r\n                    countRef.current.push(lastId);\r\n                }\r\n            }\r\n        }\r\n    }, [hasMorePost, mainPosts.length]);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', onScroll);\r\n        return () => {\r\n            window.removeEventListener('scroll', onScroll);\r\n        };\r\n    }, [mainPosts.length]);\r\n\r\n    return (\r\n        <div>\r\n            {me && <PostForm />}\r\n            {mainPosts.map((c) => {\r\n                return (\r\n                    <PostCard key={c.id} post={c} />\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nHome.getInitialProps = async (context) => {\r\n    console.log(Object.keys(context));\r\n    context.store.dispatch({\r\n        type: LOAD_MAIN_POSTS_REQUEST,\r\n    });\r\n};\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}