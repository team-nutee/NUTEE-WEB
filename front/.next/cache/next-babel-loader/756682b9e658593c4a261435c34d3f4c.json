{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(logIn),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogIn),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(signUp),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchSignUp),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(logOut),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogOut),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadUser),\n    _marked8 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLoadUser),\n    _marked9 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(follow),\n    _marked10 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchFollow),\n    _marked11 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(unfollow),\n    _marked12 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchUnfollow),\n    _marked13 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadFollowers),\n    _marked14 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLoadFollowers),\n    _marked15 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadFollowings),\n    _marked16 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLoadFollowings),\n    _marked17 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(removeFollower),\n    _marked18 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchRemoveFollower),\n    _marked19 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(editNickname),\n    _marked20 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchEditNickname),\n    _marked21 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(userSaga);\n\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { EDIT_NICKNAME_FAILURE, EDIT_NICKNAME_REQUEST, EDIT_NICKNAME_SUCCESS, FOLLOW_USER_FAILURE, FOLLOW_USER_REQUEST, FOLLOW_USER_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, REMOVE_FOLLOWER_FAILURE, REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_USER_FAILURE, UNFOLLOW_USER_REQUEST, UNFOLLOW_USER_SUCCESS } from '../reducers/user';\n\nfunction logInAPI(loginData) {\n  // 서버에 요청을 보내는 부분\n  return axios.post('/user/login', loginData, {\n    withCredentials: true\n  });\n}\n\nfunction logIn(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function logIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(logInAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: LOG_IN_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context.t0);\n          _context.next = 13;\n          return put({\n            type: LOG_IN_FAILURE\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchLogIn() {\n  return _regeneratorRuntime.wrap(function watchLogIn$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(LOG_IN_REQUEST, logIn);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction signUpAPI(signUpData) {\n  // 서버에 요청을 보내는 부분\n  return axios.post('/user/', signUpData);\n}\n\nfunction signUp(action) {\n  return _regeneratorRuntime.wrap(function signUp$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(signUpAPI, action.data);\n\n        case 3:\n          _context3.next = 5;\n          return put({\n            // put은 dispatch 동일\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 5:\n          _context3.next = 12;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          // 회원가입 실패\n          alert('이미 존재하는 아이디입니다.');\n          _context3.next = 12;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context3.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 7]]);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction logOutAPI() {\n  // 서버에 요청을 보내는 부분\n  return axios.post('/user/logout', {}, {\n    withCredentials: true\n  });\n}\n\nfunction logOut() {\n  return _regeneratorRuntime.wrap(function logOut$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(logOutAPI);\n\n        case 3:\n          _context5.next = 5;\n          return put({\n            // put은 dispatch 동일\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 5:\n          _context5.next = 12;\n          break;\n\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context5.t0);\n          _context5.next = 12;\n          return put({\n            type: LOG_OUT_FAILURE,\n            error: _context5.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 7]]);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(LOG_OUT_REQUEST, logOut);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction loadUserAPI(userId) {\n  // 서버에 요청을 보내는 부분\n  return axios.get(userId ? \"/user/\".concat(userId) : '/user/', {\n    withCredentials: true // 클라이언트에서 요청 보낼 때는 브라우저가 쿠키를 같이 동봉해줘요\n\n  }); // 서버사이드렌더링일 때는, 브라우저가 없어요.\n}\n\nfunction loadUser(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadUser$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(loadUserAPI, action.data);\n\n        case 3:\n          result = _context7.sent;\n          _context7.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: LOAD_USER_SUCCESS,\n            data: result.data,\n            me: !action.data\n          });\n\n        case 6:\n          _context7.next = 13;\n          break;\n\n        case 8:\n          _context7.prev = 8;\n          _context7.t0 = _context7[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context7.t0);\n          _context7.next = 13;\n          return put({\n            type: LOAD_USER_FAILURE,\n            error: _context7.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 8]]);\n}\n\nfunction watchLoadUser() {\n  return _regeneratorRuntime.wrap(function watchLoadUser$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeEvery(LOAD_USER_REQUEST, loadUser);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction followAPI(userId) {\n  // 서버에 요청을 보내는 부분\n  return axios.post(\"/user/\".concat(userId, \"/follow\"), {}, {\n    withCredentials: true\n  });\n}\n\nfunction follow(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function follow$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(followAPI, action.data);\n\n        case 3:\n          result = _context9.sent;\n          _context9.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: FOLLOW_USER_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context9.next = 13;\n          break;\n\n        case 8:\n          _context9.prev = 8;\n          _context9.t0 = _context9[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context9.t0);\n          _context9.next = 13;\n          return put({\n            type: FOLLOW_USER_FAILURE,\n            error: _context9.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 8]]);\n}\n\nfunction watchFollow() {\n  return _regeneratorRuntime.wrap(function watchFollow$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeEvery(FOLLOW_USER_REQUEST, follow);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction unfollowAPI(userId) {\n  // 서버에 요청을 보내는 부분\n  return axios[\"delete\"](\"/user/\".concat(userId, \"/follow\"), {\n    withCredentials: true\n  });\n}\n\nfunction unfollow(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function unfollow$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.prev = 0;\n          _context11.next = 3;\n          return call(unfollowAPI, action.data);\n\n        case 3:\n          result = _context11.sent;\n          _context11.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: UNFOLLOW_USER_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context11.next = 13;\n          break;\n\n        case 8:\n          _context11.prev = 8;\n          _context11.t0 = _context11[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context11.t0);\n          _context11.next = 13;\n          return put({\n            type: UNFOLLOW_USER_FAILURE,\n            error: _context11.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[0, 8]]);\n}\n\nfunction watchUnfollow() {\n  return _regeneratorRuntime.wrap(function watchUnfollow$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeEvery(UNFOLLOW_USER_REQUEST, unfollow);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nfunction loadFollowersAPI(userId) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;\n  // 서버에 요청을 보내는 부분\n  return axios.get(\"/user/\".concat(userId || 0, \"/followers?offset=\").concat(offset, \"&limit=\").concat(limit), {\n    withCredentials: true\n  });\n}\n\nfunction loadFollowers(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadFollowers$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.prev = 0;\n          _context13.next = 3;\n          return call(loadFollowersAPI, action.data, action.offset);\n\n        case 3:\n          result = _context13.sent;\n          _context13.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: LOAD_FOLLOWERS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context13.next = 13;\n          break;\n\n        case 8:\n          _context13.prev = 8;\n          _context13.t0 = _context13[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context13.t0);\n          _context13.next = 13;\n          return put({\n            type: LOAD_FOLLOWERS_FAILURE,\n            error: _context13.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13, null, [[0, 8]]);\n}\n\nfunction watchLoadFollowers() {\n  return _regeneratorRuntime.wrap(function watchLoadFollowers$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeEvery(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}\n\nfunction loadFollowingsAPI(userId) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;\n  // 서버에 요청을 보내는 부분\n  return axios.get(\"/user/\".concat(userId || 0, \"/followings?offset=\").concat(offset, \"&limit=\").concat(limit), {\n    withCredentials: true\n  });\n}\n\nfunction loadFollowings(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadFollowings$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.prev = 0;\n          _context15.next = 3;\n          return call(loadFollowingsAPI, action.data, action.offset);\n\n        case 3:\n          result = _context15.sent;\n          _context15.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: LOAD_FOLLOWINGS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context15.next = 13;\n          break;\n\n        case 8:\n          _context15.prev = 8;\n          _context15.t0 = _context15[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context15.t0);\n          _context15.next = 13;\n          return put({\n            type: LOAD_FOLLOWINGS_FAILURE,\n            error: _context15.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15, null, [[0, 8]]);\n}\n\nfunction watchLoadFollowings() {\n  return _regeneratorRuntime.wrap(function watchLoadFollowings$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return takeEvery(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n\n        case 2:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16);\n}\n\nfunction removeFollowerAPI(userId) {\n  // 서버에 요청을 보내는 부분\n  return axios[\"delete\"](\"/user/\".concat(userId, \"/follower\"), {\n    withCredentials: true\n  });\n}\n\nfunction removeFollower(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function removeFollower$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.prev = 0;\n          _context17.next = 3;\n          return call(removeFollowerAPI, action.data);\n\n        case 3:\n          result = _context17.sent;\n          _context17.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: REMOVE_FOLLOWER_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context17.next = 13;\n          break;\n\n        case 8:\n          _context17.prev = 8;\n          _context17.t0 = _context17[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context17.t0);\n          _context17.next = 13;\n          return put({\n            type: REMOVE_FOLLOWER_FAILURE,\n            error: _context17.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked17, null, [[0, 8]]);\n}\n\nfunction watchRemoveFollower() {\n  return _regeneratorRuntime.wrap(function watchRemoveFollower$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          _context18.next = 2;\n          return takeEvery(REMOVE_FOLLOWER_REQUEST, removeFollower);\n\n        case 2:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, _marked18);\n}\n\nfunction editNicknameAPI(nickname) {\n  // 서버에 요청을 보내는 부분\n  return axios.patch('/user/nickname', {\n    nickname: nickname\n  }, {\n    withCredentials: true\n  });\n}\n\nfunction editNickname(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function editNickname$(_context19) {\n    while (1) {\n      switch (_context19.prev = _context19.next) {\n        case 0:\n          _context19.prev = 0;\n          _context19.next = 3;\n          return call(editNicknameAPI, action.data);\n\n        case 3:\n          result = _context19.sent;\n          _context19.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: EDIT_NICKNAME_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context19.next = 13;\n          break;\n\n        case 8:\n          _context19.prev = 8;\n          _context19.t0 = _context19[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context19.t0);\n          _context19.next = 13;\n          return put({\n            type: EDIT_NICKNAME_FAILURE,\n            error: _context19.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context19.stop();\n      }\n    }\n  }, _marked19, null, [[0, 8]]);\n}\n\nfunction watchEditNickname() {\n  return _regeneratorRuntime.wrap(function watchEditNickname$(_context20) {\n    while (1) {\n      switch (_context20.prev = _context20.next) {\n        case 0:\n          _context20.next = 2;\n          return takeEvery(EDIT_NICKNAME_REQUEST, editNickname);\n\n        case 2:\n        case \"end\":\n          return _context20.stop();\n      }\n    }\n  }, _marked20);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context21) {\n    while (1) {\n      switch (_context21.prev = _context21.next) {\n        case 0:\n          _context21.next = 2;\n          return all([fork(watchLogIn), fork(watchLogOut), fork(watchLoadUser), fork(watchSignUp), fork(watchFollow), fork(watchUnfollow), fork(watchLoadFollowers), fork(watchLoadFollowings), fork(watchRemoveFollower), fork(watchEditNickname)]);\n\n        case 2:\n        case \"end\":\n          return _context21.stop();\n      }\n    }\n  }, _marked21);\n}","map":{"version":3,"sources":["C:/Users/mf311/IdeaProjects/NUTEE-WEB/front/sagas/user.js"],"names":["logIn","watchLogIn","signUp","watchSignUp","logOut","watchLogOut","loadUser","watchLoadUser","follow","watchFollow","unfollow","watchUnfollow","loadFollowers","watchLoadFollowers","loadFollowings","watchLoadFollowings","removeFollower","watchRemoveFollower","editNickname","watchEditNickname","userSaga","all","call","fork","put","takeEvery","axios","EDIT_NICKNAME_FAILURE","EDIT_NICKNAME_REQUEST","EDIT_NICKNAME_SUCCESS","FOLLOW_USER_FAILURE","FOLLOW_USER_REQUEST","FOLLOW_USER_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_USER_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","REMOVE_FOLLOWER_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","UNFOLLOW_USER_FAILURE","UNFOLLOW_USER_REQUEST","UNFOLLOW_USER_SUCCESS","logInAPI","loginData","post","withCredentials","action","data","result","type","console","error","signUpAPI","signUpData","alert","logOutAPI","loadUserAPI","userId","get","me","followAPI","unfollowAPI","loadFollowersAPI","offset","limit","loadFollowingsAPI","removeFollowerAPI","editNicknameAPI","nickname","patch"],"mappings":"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","sourcesContent":["import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n    EDIT_NICKNAME_FAILURE, EDIT_NICKNAME_REQUEST,\r\n    EDIT_NICKNAME_SUCCESS,\r\n    FOLLOW_USER_FAILURE,\r\n    FOLLOW_USER_REQUEST,\r\n    FOLLOW_USER_SUCCESS,\r\n    LOAD_FOLLOWERS_FAILURE,\r\n    LOAD_FOLLOWERS_REQUEST,\r\n    LOAD_FOLLOWERS_SUCCESS,\r\n    LOAD_FOLLOWINGS_FAILURE, LOAD_FOLLOWINGS_REQUEST,\r\n    LOAD_FOLLOWINGS_SUCCESS,\r\n    LOAD_USER_FAILURE,\r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n    LOG_IN_FAILURE,\r\n    LOG_IN_REQUEST,\r\n    LOG_IN_SUCCESS,\r\n    LOG_OUT_FAILURE,\r\n    LOG_OUT_REQUEST,\r\n    LOG_OUT_SUCCESS, REMOVE_FOLLOWER_FAILURE, REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS,\r\n    SIGN_UP_FAILURE,\r\n    SIGN_UP_REQUEST,\r\n    SIGN_UP_SUCCESS,\r\n    UNFOLLOW_USER_FAILURE,\r\n    UNFOLLOW_USER_REQUEST,\r\n    UNFOLLOW_USER_SUCCESS,\r\n} from '../reducers/user';\r\n\r\nfunction logInAPI(loginData) {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.post('/user/login', loginData, {\r\n        withCredentials: true,\r\n    });\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        const result = yield call(logInAPI, action.data);\r\n        yield put({ // put은 dispatch 동일\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (e) { // loginAPI 실패\r\n        console.error(e);\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n    yield takeEvery(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction signUpAPI(signUpData) {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.post('/user/', signUpData);\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try {\r\n        yield call(signUpAPI, action.data);\r\n            yield put({ // put은 dispatch 동일\r\n            type: SIGN_UP_SUCCESS,\r\n        });\r\n    } catch (e) { // 회원가입 실패\r\n        alert('이미 존재하는 아이디입니다.');\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeEvery(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nfunction logOutAPI() {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.post('/user/logout', {}, {\r\n        withCredentials: true,\r\n    });\r\n}\r\n\r\nfunction* logOut() {\r\n    try {\r\n        // yield call(logOutAPI);\r\n        yield call(logOutAPI);\r\n        yield put({ // put은 dispatch 동일\r\n            type: LOG_OUT_SUCCESS,\r\n        });\r\n    } catch (e) { // loginAPI 실패\r\n        console.error(e);\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    yield takeEvery(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction loadUserAPI(userId) {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.get(userId ? `/user/${userId}` : '/user/', {\r\n        withCredentials: true, // 클라이언트에서 요청 보낼 때는 브라우저가 쿠키를 같이 동봉해줘요\r\n    }); // 서버사이드렌더링일 때는, 브라우저가 없어요.\r\n}\r\n\r\nfunction* loadUser(action) {\r\n    try {\r\n        // yield call(loadUserAPI);\r\n        const result = yield call(loadUserAPI, action.data);\r\n        yield put({ // put은 dispatch 동일\r\n            type: LOAD_USER_SUCCESS,\r\n            data: result.data,\r\n            me: !action.data,\r\n        });\r\n    } catch (e) { // loginAPI 실패\r\n        console.error(e);\r\n        yield put({\r\n            type: LOAD_USER_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLoadUser() {\r\n    yield takeEvery(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nfunction followAPI(userId) {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.post(`/user/${userId}/follow`, {}, {\r\n        withCredentials: true,\r\n    });\r\n}\r\n\r\nfunction* follow(action) {\r\n    try {\r\n        // yield call(followAPI);\r\n        const result = yield call(followAPI, action.data);\r\n        yield put({ // put은 dispatch 동일\r\n            type: FOLLOW_USER_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (e) { // loginAPI 실패\r\n        console.error(e);\r\n        yield put({\r\n            type: FOLLOW_USER_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchFollow() {\r\n    yield takeEvery(FOLLOW_USER_REQUEST, follow);\r\n}\r\n\r\nfunction unfollowAPI(userId) {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.delete(`/user/${userId}/follow`, {\r\n        withCredentials: true,\r\n    });\r\n}\r\n\r\nfunction* unfollow(action) {\r\n    try {\r\n        // yield call(unfollowAPI);\r\n        const result = yield call(unfollowAPI, action.data);\r\n        yield put({ // put은 dispatch 동일\r\n            type: UNFOLLOW_USER_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (e) { // loginAPI 실패\r\n        console.error(e);\r\n        yield put({\r\n            type: UNFOLLOW_USER_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n    yield takeEvery(UNFOLLOW_USER_REQUEST, unfollow);\r\n}\r\n\r\nfunction loadFollowersAPI(userId, offset = 0, limit = 3) {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.get(`/user/${userId || 0}/followers?offset=${offset}&limit=${limit}`, {\r\n        withCredentials: true,\r\n    });\r\n}\r\n\r\nfunction* loadFollowers(action) {\r\n    try {\r\n        // yield call(loadFollowersAPI);\r\n        const result = yield call(loadFollowersAPI, action.data, action.offset);\r\n        yield put({ // put은 dispatch 동일\r\n            type: LOAD_FOLLOWERS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (e) { // loginAPI 실패\r\n        console.error(e);\r\n        yield put({\r\n            type: LOAD_FOLLOWERS_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLoadFollowers() {\r\n    yield takeEvery(LOAD_FOLLOWERS_REQUEST, loadFollowers);\r\n}\r\n\r\nfunction loadFollowingsAPI(userId, offset = 0, limit = 3) {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.get(`/user/${userId || 0}/followings?offset=${offset}&limit=${limit}`, {\r\n        withCredentials: true,\r\n    });\r\n}\r\n\r\nfunction* loadFollowings(action) {\r\n    try {\r\n        // yield call(loadFollowersAPI);\r\n        const result = yield call(loadFollowingsAPI, action.data, action.offset);\r\n        yield put({ // put은 dispatch 동일\r\n            type: LOAD_FOLLOWINGS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (e) { // loginAPI 실패\r\n        console.error(e);\r\n        yield put({\r\n            type: LOAD_FOLLOWINGS_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLoadFollowings() {\r\n    yield takeEvery(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\r\n}\r\n\r\nfunction removeFollowerAPI(userId) {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.delete(`/user/${userId}/follower`, {\r\n        withCredentials: true,\r\n    });\r\n}\r\n\r\nfunction* removeFollower(action) {\r\n    try {\r\n        // yield call(loadFollowersAPI);\r\n        const result = yield call(removeFollowerAPI, action.data);\r\n        yield put({ // put은 dispatch 동일\r\n            type: REMOVE_FOLLOWER_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (e) { // loginAPI 실패\r\n        console.error(e);\r\n        yield put({\r\n            type: REMOVE_FOLLOWER_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchRemoveFollower() {\r\n    yield takeEvery(REMOVE_FOLLOWER_REQUEST, removeFollower);\r\n}\r\n\r\nfunction editNicknameAPI(nickname) {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.patch('/user/nickname', { nickname }, {\r\n        withCredentials: true,\r\n    });\r\n}\r\n\r\nfunction* editNickname(action) {\r\n    try {\r\n        // yield call(loadFollowersAPI);\r\n        const result = yield call(editNicknameAPI, action.data);\r\n        yield put({ // put은 dispatch 동일\r\n            type: EDIT_NICKNAME_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (e) { // loginAPI 실패\r\n        console.error(e);\r\n        yield put({\r\n            type: EDIT_NICKNAME_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchEditNickname() {\r\n    yield takeEvery(EDIT_NICKNAME_REQUEST, editNickname);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchLoadUser),\r\n        fork(watchSignUp),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchLoadFollowers),\r\n        fork(watchLoadFollowings),\r\n        fork(watchRemoveFollower),\r\n        fork(watchEditNickname),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}